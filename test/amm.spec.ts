import { AMMStateResponse, OrderBooksV3Response } from '../src/backend/secrettune/BorosBackendSDK';
import { combineMarketOrderBookAndAMM } from '../src/entities/amm/amm';

describe('combineMarketOrderBookAndAmm', () => {
  it('should combine correctly when AMMImpliedRate is between best bid and best ask rate', () => {
    const tickSize = 0.001;
    const marketOrderBook: OrderBooksV3Response = {
      long: {
        ia: [95, 90, 85, 80, 75, 70, 65, 60, 55, 50],
        sz: [
          '76200000000000000000',
          '20000000000000000',
          '2000000000000000000',
          '10000000000000000',
          '3205182798196236520',
          '10000000000000000',
          '100000000000000000',
          '100000000000000000',
          '100000000000000000',
          '100000000000000000',
        ],
      },
      short: {
        ia: [105, 110, 115, 120, 125, 130, 135, 140, 145, 150],
        sz: [
          '99790000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
        ],
      },
    };

    const ammStateResponse: AMMStateResponse = {
      totalFloatAmount: '2490787079878783975900',
      normFixedAmount: '249078707987878397590',
      totalLp: '787656033893671113961',
      latestFTime: '1743811200',
      maturity: '1747872000',
      seedTime: '1743062400',
      minAbsRate: '10000000000000000',
      maxAbsRate: '300000000000000000',
      cutOffTimestamp: '1747872000',
    };

    const isPositiveAMM = true;
    const result = combineMarketOrderBookAndAMM(tickSize, marketOrderBook, ammStateResponse, isPositiveAMM);

    expect(result).toEqual({
      long: {
        ia: [99, 98, 97, 96, 95, 94, 93, 92, 91, 90],
        sz: [
          '13610271445662834034',
          '13823956795392007353',
          '14043229375344512552',
          '14268294856529239993',
          '90699368720230901400',
          '14736676835031245605',
          '14980456074323246577',
          '15230954977629720703',
          '15488434459348057372',
          '15773168568885510655',
        ],
      },
      short: {
        ia: [101, 102, 103, 104, 105, 106, 107, 108, 109, 110],
        sz: [
          '13401976925864881432',
          '13198885601549638906',
          '13000818131378430078',
          '12807603024194660579',
          '112409076223751861521',
          '12435080719130635879',
          '12255466179024632144',
          '12080088608230235523',
          '11908810024795855525',
          '11762498156413929530',
        ],
      },
    });
  });

  it('should combine correctly when AMMImpliedRate is bigger than best ask rate', () => {
    const tickSize = 0.001;
    const marketOrderBook: OrderBooksV3Response = {
      long: {
        ia: [45, 43, 37, 32, 10, 9, 0],
        sz: [
          '7620000000000000000',
          '20000000000000000',
          '2000000000000000000',
          '10000000000000000',
          '3205182798196236520',
          '10000000000000000',
          '100000000000000000',
        ],
      },
      short: {
        ia: [71, 121],
        sz: ['99790000000000000000', '21000000000000000'],
      },
    };

    const ammStateResponse: AMMStateResponse = {
      totalFloatAmount: '2490787079878783975900',
      normFixedAmount: '249078707987878397590',
      totalLp: '787656033893671113961',
      latestFTime: '1743811200',
      maturity: '1747872000',
      seedTime: '1743062400',
      minAbsRate: '10000000000000000',
      maxAbsRate: '300000000000000000',
      cutOffTimestamp: '1747872000',
    };

    const isPositiveAMM = true;
    const result = combineMarketOrderBookAndAMM(tickSize, marketOrderBook, ammStateResponse, isPositiveAMM);

    expect(result).toEqual({
      long: {
        ia: [70, 69, 68, 67, 66, 65, 64, 63, 62, 61],
        sz: [
          '531429988820291429265',
          '23670602521196586923',
          '24205650599527496717',
          '24760931693621127775',
          '25337527994315098948',
          '25936597054320460829',
          '26559378291453495743',
          '27207200164794229165',
          '27881488105337386960',
          '28583773294082312585',
        ],
      },
      short: {
        ia: [71, 101, 102, 103, 104, 105, 106, 107, 108, 109],
        sz: [
          '99790000000000000000',
          '13401976925864881432',
          '13198885601549638906',
          '13000818131378430078',
          '12807603024194660579',
          '12619076223751861521',
          '12435080719130635879',
          '12255466179024632144',
          '12080088608230235523',
          '11908810024795855525',
        ],
      },
    });
  });

  it('should combine correctly when AMMImpliedRate is smaller than best bid rate', () => {
    const tickSize = 0.001;
    const marketOrderBook: OrderBooksV3Response = {
      long: {
        ia: [120, 115, 110, 105, 100, 95, 90, 85, 80, 75],
        sz: [
          '7620000000000000000',
          '20000000000000000',
          '2000000000000000000',
          '10000000000000000',
          '3205182798196236520',
          '10000000000000000',
          '100000000000000000',
          '100000000000000000',
          '100000000000000000',
          '100000000000000000',
        ],
      },
      short: {
        ia: [125, 130, 135, 140, 145, 150, 155, 160, 165, 170],
        sz: [
          '99790000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
          '21000000000000000',
        ],
      },
    };

    const ammStateResponse: AMMStateResponse = {
      totalFloatAmount: '2490787079878783975900',
      normFixedAmount: '249078707987878397590',
      totalLp: '787656033893671113961',
      latestFTime: '1743811200',
      maturity: '1747872000',
      seedTime: '1743062400',
      minAbsRate: '10000000000000000',
      maxAbsRate: '300000000000000000',
      cutOffTimestamp: '1747872000',
    };

    const isPositiveAMM = true;
    const result = combineMarketOrderBookAndAMM(tickSize, marketOrderBook, ammStateResponse, isPositiveAMM);

    expect(result).toEqual({
      long: {
        ia: [120, 115, 110, 105, 100, 99, 98, 97, 96, 95],
        sz: [
          '7620000000000000000',
          '20000000000000000',
          '2000000000000000000',
          '10000000000000000',
          '3205182798196236520',
          '13610271445662834034',
          '13823956795392007353',
          '14043229375344512552',
          '14268294856529239993',
          '14509368720230901400',
        ],
      },
      short: {
        ia: [121, 122, 123, 124, 125, 126, 127, 128, 129, 130],
        sz: [
          '244580312100568515494',
          '10001680337852692346',
          '9876041903882405298',
          '9752984054900308105',
          '109422433528178180912',
          '9514319706898152496',
          '9398574504476352559',
          '9285132254809610763',
          '9173929608098238095',
          '9085905431920864840',
        ],
      },
    });
  });

  it('should combine correctly when there is no long order book', () => {
    const tickSize = 0.0001;
    const marketOrderBook: OrderBooksV3Response = {
      long: {
        ia: [378, 120, 109],
        sz: ['1640000000000000000', '2000000000000000000', '3000000000000000000'],
      },
      short: {
        ia: [],
        sz: [],
      },
    };

    const ammStateResponse: AMMStateResponse = {
      totalFloatAmount: '2174227079878783975899',
      normFixedAmount: '274847956387325199884',
      totalLp: '787656033893671113961',
      latestFTime: '1744358400',
      maturity: '1747872000',
      seedTime: '1743062400',
      minAbsRate: '10000000000000000',
      maxAbsRate: '300000000000000000',
      cutOffTimestamp: '1747872000',
    };

    const isPositiveAMM = true;
    const result = combineMarketOrderBookAndAMM(tickSize, marketOrderBook, ammStateResponse, isPositiveAMM);

    expect(result).toEqual({
      long: {
        ia: [1264, 1263, 1262, 1261, 1260, 1259, 1258, 1257, 1256, 1255],
        sz: [
          '117276086588422569',
          '994651736318755365',
          '995895122636397853',
          '997141050375768105',
          '998389526753001425',
          '999640559008461068',
          '1000894154410851532',
          '1002150320254347700',
          '1003409063859710089',
          '1004670392575387017',
        ],
      },
      short: {
        ia: [1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274],
        sz: [
          '876134797645411483',
          '992172559218609858',
          '990936754134965881',
          '989703461872536446',
          '988472675344631494',
          '987244387491092444',
          '986018591277206457',
          '984795279692587869',
          '983574445754036324',
          '982356082501477759',
        ],
      },
    });
  });

  it('should combine correctly when there is no short order book', () => {
    const tickSize = 0.0001;
    const marketOrderBook: OrderBooksV3Response = {
      long: {
        ia: [],
        sz: [],
      },
      short: {
        ia: [1268, 1270, 1272],
        sz: ['1640000000000000000', '2000000000000000000', '3000000000000000000'],
      },
    };

    const ammStateResponse: AMMStateResponse = {
      totalFloatAmount: '2174227079878783975899',
      normFixedAmount: '274847956387325199884',
      totalLp: '787656033893671113961',
      latestFTime: '1744358400',
      maturity: '1747872000',
      seedTime: '1743062400',
      minAbsRate: '10000000000000000',
      maxAbsRate: '300000000000000000',
      cutOffTimestamp: '1747872000',
    };

    const isPositiveAMM = true;
    const result = combineMarketOrderBookAndAMM(tickSize, marketOrderBook, ammStateResponse, isPositiveAMM);

    expect(result).toEqual({
      long: {
        ia: [1264, 1263, 1262, 1261, 1260, 1259, 1258, 1257, 1256, 1255],
        sz: [
          '117276086588422569',
          '994651736318755365',
          '995895122636397853',
          '997141050375768105',
          '998389526753001425',
          '999640559008461068',
          '1000894154410851532',
          '1002150320254347700',
          '1003409063859710089',
          '1004670392575387017',
        ],
      },
      short: {
        ia: [1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274],
        sz: [
          '876134797645411483',
          '992172559218609858',
          '990936754134965881',
          '2629703461872536446',
          '988472675344631494',
          '2987244387491092444',
          '986018591277206457',
          '3984795279692587869',
          '983574445754036324',
          '982356082501477759',
        ],
      },
    });
  });

  it('should combine correctly when there is no short order book bigger than implied rate', () => {
    const tickSize = 0.00001;
    const marketOrderBook: OrderBooksV3Response = {
      long: {
        ia: [5992, 4990, 2993, 1511, 1207],
        sz: [
          '12000000000000000000',
          '3890000000000000000',
          '10000000000000000000',
          '98000000000000000000',
          '2000000000000000000',
        ],
      },
      short: {
        ia: [7005],
        sz: ['50310000000000000000'],
      },
    };

    const ammStateResponse: AMMStateResponse = {
      totalFloatAmount: '1659216901752019617400',
      normFixedAmount: '165564091360090085983',
      totalLp: '524057998646386757088',
      latestFTime: '1744588800',
      maturity: '1750291200',
      seedTime: '1743062400',
      minAbsRate: '10000000000000000',
      maxAbsRate: '300000000000000000',
      cutOffTimestamp: '1750291200',
    };

    const isPositiveAMM = true;
    const result = combineMarketOrderBookAndAMM(tickSize, marketOrderBook, ammStateResponse, isPositiveAMM);

    expect(result).toEqual({
      long: {
        ia: [7004, 7003, 7002, 7001, 7000, 6999, 6998, 6997, 6996, 6995],
        sz: [
          '363028996100075664150',
          '161422304899901297',
          '161458245015192617',
          '161494198266493798',
          '161530164661128043',
          '161566144205450405',
          '161602136906801899',
          '161638142770901724',
          '161674161804928512',
          '161710194015909929',
        ],
      },
      short: {
        ia: [7005, 9979, 9980, 9981, 9982, 9983, 9984, 9985, 9986, 9987],
        sz: [
          '50310000000000000000',
          '51332916451658574',
          '92938607491118397',
          '92924090273008656',
          '92909576776664907',
          '92895067000946193',
          '92880560944341716',
          '92866058605337820',
          '92851559982798049',
          '92837065075675480',
        ],
      },
    });
  });

  it('should combine correctly when there is no long order book smaller than implied rate', () => {
    const tickSize = 0.00001;
    const marketOrderBook: OrderBooksV3Response = {
      long: {
        ia: [11000, 10900, 10800, 10700, 10600],
        sz: [
          '12000000000000000000',
          '3890000000000000000',
          '10000000000000000000',
          '98000000000000000000',
          '2000000000000000000',
        ],
      },
      short: {
        ia: [12000],
        sz: ['50310000000000000000'],
      },
    };

    const ammStateResponse: AMMStateResponse = {
      totalFloatAmount: '1659216901752019617400',
      normFixedAmount: '165564091360090085983',
      totalLp: '524057998646386757088',
      latestFTime: '1744588800',
      maturity: '1750291200',
      seedTime: '1743062400',
      minAbsRate: '10000000000000000',
      maxAbsRate: '300000000000000000',
      cutOffTimestamp: '1750291200',
    };

    const isPositiveAMM = true;
    const result = combineMarketOrderBookAndAMM(tickSize, marketOrderBook, ammStateResponse, isPositiveAMM);

    expect(result).toEqual({
      long: {
        ia: [11000, 10900, 10800, 10700, 10600, 9978, 9977, 9976, 9975, 9974],
        sz: [
          '12000000000000000000',
          '3890000000000000000',
          '10000000000000000000',
          '98000000000000000000',
          '2000000000000000000',
          '41620211980384147',
          '92967653097670245',
          '92982181489045068',
          '92996713607316625',
          '93011249453996134',
        ],
      },
      short: {
        ia: [11001, 11002, 11003, 11004, 11005, 11006, 11007, 11008, 11009, 11010],
        sz: [
          '88065839346999884998',
          '79832988518345581',
          '79821676719501255',
          '79810367551309988',
          '79799061012762201',
          '79787757103165764',
          '79776455821987320',
          '79765157167583312',
          '79753861139903146',
          '79742567737611489',
        ],
      },
    });
  });
});
